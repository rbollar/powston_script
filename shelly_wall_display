type: grid
columns: 2
cards:
  - type: custom:button-card
    entity: sensor.powston_inverter_43923_lv_buy_price
    name: Buy
    show_name: false
    show_state: true
    show_icon: false
    styles:
      card:
        - height: 200px
        - padding: 0
        - box-shadow: none
        - border: none
        - background-color: >
            [[[
              const updated = new Date(entity.last_changed);
              const now = new Date();
              const diff = (now - updated) / 60000;
              if (diff > 30) return 'rgba(0,0,0,0.15)';
              if (diff > 10) return 'rgba(0,0,0,0.05)';
              return 'transparent';
            ]]]
      state:
        - font-size: 0px
    state_display: >
      [[[
        let raw = parseFloat(entity.state);
        let color = '#FBC02D';
        let display = '';

        if (raw < 10 || raw < 0) {
          color = '#43A047';
        } else if (raw > 40) {
          color = '#E53935';
        }

        if (raw >= 100) {
          display = `<span style="font-size:20px;">$</span>${(raw / 100).toFixed(2)}<span style="font-size:28px;">/kWh</span>`;
        } else {
          display = `${raw.toFixed(1)}<span style="font-size:28px;"> c/kWh</span>`;
        }

        const updatedTime = new Date(entity.last_changed);
        const now = new Date();
        const diffMins = Math.floor((now - updatedTime) / 60000);
        let timeDisplay = 'just now';
        if (diffMins === 1) timeDisplay = '1 min ago';
        else if (diffMins > 1) timeDisplay = `${diffMins} mins ago`;

        return `
          <div style="display:flex; align-items:center; height:100%;">
            <div style="font-size:34px; font-weight:bold; color:#ffffff; writing-mode: vertical-rl; transform: rotate(180deg); margin-right:30px; margin-top:-6px;">Buy</div>
            <div>
              <div class="price-anim" style="font-size:60px; font-weight:bold; color:${color};">${display}</div>
              <div style="font-size:16px; color:#999999; margin-top:4px;">Updated: ${timeDisplay}</div>
            </div>
          </div>
        `;
      ]]]
    extra_styles: |
      @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.1); }
        100% { transform: scale(1); }
      }
      .price-anim {
        animation: pulse 0.6s ease;
        display: inline-block;
      }

  - type: custom:button-card
    entity: sensor.powston_inverter_43923_lv_sell_price
    name: Sell
    show_name: false
    show_state: true
    show_icon: false
    styles:
      card:
        - height: 200px
        - padding: 0
        - box-shadow: none
        - border: none
        - background-color: >
            [[[
              const updated = new Date(entity.last_changed);
              const now = new Date();
              const diff = (now - updated) / 60000;
              if (diff > 30) return 'rgba(0,0,0,0.15)';
              if (diff > 10) return 'rgba(0,0,0,0.05)';
              return 'transparent';
            ]]]
      state:
        - font-size: 0px
    state_display: >
      [[[
        let raw = parseFloat(entity.state);
        let color = '#43A047';
        let display = '';

        if (raw < 0) {
          color = '#E53935';
        }

        if (raw >= 100) {
          display = `<span style="font-size:20px;">$</span>${(raw / 100).toFixed(2)}<span style="font-size:28px;">/kWh</span>`;
        } else {
          display = `${raw.toFixed(1)}<span style="font-size:28px;"> c/kWh</span>`;
        }

        const updatedTime = new Date(entity.last_changed);
        const now = new Date();
        const diffMins = Math.floor((now - updatedTime) / 60000);
        let timeDisplay = 'just now';
        if (diffMins === 1) timeDisplay = '1 min ago';
        else if (diffMins > 1) timeDisplay = `${diffMins} mins ago`;

        return `
          <div style="display:flex; align-items:center; height:100%;">
            <div style="font-size:34px; font-weight:bold; color:#ffffff; writing-mode: vertical-rl; transform: rotate(180deg); margin-right:30px; margin-top:-6px;">Sell</div>
            <div>
              <div class="price-anim" style="font-size:60px; font-weight:bold; color:${color};">${display}</div>
              <div style="font-size:16px; color:#999999; margin-top:4px;">Updated: ${timeDisplay}</div>
            </div>
          </div>
        `;
      ]]]
    extra_styles: |
      @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.1); }
        100% { transform: scale(1); }
      }
      .price-anim {
        animation: pulse 0.6s ease;
        display: inline-block;
      }
